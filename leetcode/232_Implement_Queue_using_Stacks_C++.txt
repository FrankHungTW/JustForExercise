
//two stack, speed 100%, memory 55%
class MyQueue {
private:
    stack<int> stk1;
    stack<int> stk2;
public:
    MyQueue() {
        
    }
    
    void push(int x) {
        stk1.push(x);
    }
    
    int pop() {
        if(stk1.empty())
        {return 0;}
        else
        {
            int temp=stk1.top();
            while(stk1.size()>1)
            {
                stk2.push(temp);
                stk1.pop();
                temp=stk1.top();
            }
            stk1.pop();
            while(stk2.size())
            {
                stk1.push(stk2.top());
                stk2.pop();
            }
            return temp;
        }
    }
    
    int peek() {
        if(stk1.empty())
        {return 0;}
        else
        {
            int temp=0;
            while(stk1.size())
            {
                temp=stk1.top();
                stk2.push(temp);
                stk1.pop();
            }
            while(stk2.size())
            {
                stk1.push(stk2.top());
                stk2.pop();
            }
            return temp;
        }
    }
    
    bool empty() {
        return stk1.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */