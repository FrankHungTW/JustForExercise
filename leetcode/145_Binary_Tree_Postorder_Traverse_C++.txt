/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>result;
        
        if(root==NULL)
        {
            return result;
        }
        else
        {
            stack<TreeNode*> stk;
            TreeNode* cur = root;
            
            stk.push(cur);
            while(!stk.empty())
            {
                cur = stk.top();
                if((cur->left==NULL) && (cur->right==NULL))
                {
                    result.push_back(cur->val);
                    stk.pop();
                }
                if(cur->right)
                {
                    stk.push(cur->right);
                    cur->right=NULL;
                }
                
                if(cur->left)
                {
                    stk.push(cur->left);
                    cur->left=NULL;
                }
            }
            return result;
        }
    }
};
