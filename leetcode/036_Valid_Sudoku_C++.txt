
//speed 97%, memory 75% without debug log
//speed 5%, memory 97% with debug log
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int str2num=0;
        
        //check all row and colum
        for(int i=0; i<9; i++)
        {
            int row[9]={0};
            int colum[9]={0};
            for(int j=0; j<9; j++)
            {
                cout<<"i=" << i <<" , j="<< j << endl;
                if(board[i][j]!='.')
                {
                    str2num = board[i][j]-'1';
                    if(row[str2num]==true)
                    {
                        return false;
                    }
                    row[str2num]=true;
                }
                
                cout<<"check row=" << row[str2num] << endl;
                
                if(board[j][i]!='.')
                {
                    str2num = board[j][i]-'1';
                    if(colum[str2num]==true)
                    {
                        return false;
                    }
                    colum[str2num]=true;
                }
                cout<<"check colum=" << colum[str2num] << endl;
            }
        }
        
        //check 9*9 matrix
        for(int i=0; i<9; i=i+3)
        {
            for(int j=0; j<9; j=j+3)
            {
                int matrix[9]={0};
                for(int m=i; m<(i+3); m++)
                {
                    for(int n=j; n<(j+3);n++)
                    {
                        cout<<"i=" << i <<" , j="<< j<<" , m="<< m<<" , n="<< n << endl;
                        if(board[m][n]!='.')
                        {
                            str2num = board[m][n]-'1';
                            if(matrix[str2num]==true)
                            {
                                return false;
                            }
                            matrix[str2num]=true;
                        }
                        cout<<"check matrix=" << matrix[str2num] << endl;
                    }
                }
            }
        }
        return true;
    }
};