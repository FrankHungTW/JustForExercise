//array methods, speed 76%, memory 30%
//should use link list or binary tree to achieve O(nlogn) search speed

class MyHashMap {
public:
    struct TreeNode
    {
        int index;
        int value;
        struct TreeNode *left;
        struct TreeNode *right;
    };
    //vector<int> map;
    int map[1000001]={-1};
public:
    MyHashMap() {
        for(int i=0; i<1000001; i++){
            map[i]=-1;
        }
    }
    
    void put(int key, int value) {
        map[key]=value;
    }
    
    int get(int key) {
        return map[key];
    }
    
    void remove(int key) {
        map[key] = -1;
    }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */